const express = require('express');
const cors = require('cors');

const app = express();
const PORT = process.env.PORT || 8000;

// RailwayÁí∞Â¢É„Åß„ÅÆÁí∞Â¢ÉÂ§âÊï∞Ë®≠ÂÆö
if (process.env.RAILWAY_ENVIRONMENT) {
  process.env.NODE_ENV = 'production';
  process.env.GEMINI_API_KEY = process.env.GEMINI_API_KEY || 'AIzaSyDvEGLt-BW4o3ig8j1TYjIu6cjXPAfPBhA';
  process.env.GEMINI_MODEL = process.env.GEMINI_MODEL || 'gemini-2.5-flash';
  process.env.ADMIN_TOKEN = process.env.ADMIN_TOKEN || 'secure-admin-2024';
  process.env.CLIENT_URL = process.env.CLIENT_URL || 'https://english-ayvuok004-mitama.vercel.app';
  process.env.DATABASE_URL = process.env.DATABASE_URL || 'sqlite:./data/database.sqlite';
  console.log('üöÇ RailwayÁí∞Â¢É„ÅßËµ∑Âãï‰∏≠...');
}

// CORSË®≠ÂÆö
app.use(cors({
  origin: true,
  credentials: true
}));

// „Éú„Éá„Ç£„Éë„Éº„Çµ„Éº
app.use(express.json({ limit: '10mb' }));
app.use(express.urlencoded({ extended: true }));

// „Éò„É´„Çπ„ÉÅ„Çß„ÉÉ„ÇØ
app.get('/api/health', (req, res) => {
  res.status(200).json({ 
    status: 'OK', 
    timestamp: new Date().toISOString(),
    service: 'Â≤©Ê≤¢Â≠¶Èô¢ Ëã±Ê§úÂïèÈ°åÁâπÂåñAPI',
    environment: process.env.NODE_ENV || 'development',
    port: PORT
  });
});

// „ÉÜ„Çπ„Éà„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà
app.get('/api/test', (req, res) => {
  res.json({ message: 'API is working!', timestamp: new Date().toISOString() });
});

// 404„Éè„É≥„Éâ„É©„Éº
app.use('*', (req, res) => {
  res.status(404).json({ 
    error: '„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì',
    path: req.originalUrl
  });
});

// „Çµ„Éº„Éê„ÉºËµ∑Âãï
const server = app.listen(PORT, '0.0.0.0', () => {
  console.log(`üöÄ „Çµ„Éº„Éê„Éº„ÅåËµ∑Âãï„Åó„Åæ„Åó„Åü: http://0.0.0.0:${PORT}`);
  console.log(`üìö Â≤©Ê≤¢Â≠¶Èô¢ Ëã±Ê§úÂïèÈ°åÁâπÂåñAPI„ÅåÂà©Áî®ÂèØËÉΩ„Åß„Åô`);
  console.log(`üåç Áí∞Â¢É: ${process.env.NODE_ENV || 'development'}`);
  console.log(`üîó „Éò„É´„Çπ„ÉÅ„Çß„ÉÉ„ÇØ: http://0.0.0.0:${PORT}/api/health`);
  console.log('‚úÖ ÊúÄÂ∞èÈôê„ÅÆ„Çµ„Éº„Éê„Éº„ÅåÊ≠£Â∏∏„Å´Ëµ∑Âãï„Åó„Åæ„Åó„Åü');
});

// „Ç®„É©„Éº„Éè„É≥„Éâ„É™„É≥„Ç∞
server.on('error', (err) => {
  console.error('‚ùå „Çµ„Éº„Éê„Éº„Ç®„É©„Éº:', err);
  process.exit(1);
});

module.exports = app;
